http://papers.www9.org:8027/www9/x/menu

http://papers.www9.org:8027/x/dbn/edit/user/gjb
gjb,mywww9pass

Possible Analyses:
* check that only abstract classes have abstract methods
* check that all functions have only one return statement
* changing sense of a default parameter (via overriding, since no defaults in Java)
* renaming a method
* search for unused variables
* etags
* list functions that do not call a function

XML DTD Stuff:

If an attribute is specified to be entry, then when the tag
is used it should be <foo>, not <foo/>


Duplicate attribute values not allowed:
http://www.oasis-open.org/cover/duplTokens.html




    if ( !TimerIsRunning )                            // Normal case
      return (double) ElapsedMs/1000;
    else
      return (double) (ElapsedMs + System.currentTimeMillis() - StartReading)/1000;


<if><test>!TimerIsRunning</test>
  <true-case><return>...</return></true-case>
  <false-case><return>...</return></false-case>
</if>


Thoughts for paper:

C++ : cpp has problems

Syntactic analysis phase of compiler is replaces with XML parser

Semantic analysis phase of compiler is simplified
 -> some analysis handled by validity check

canonical external representation of AST for java source program
 -> interacting compilers, tools, etc.
