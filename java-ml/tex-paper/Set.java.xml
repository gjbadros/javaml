<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE java-source-program SYSTEM "java-ml.dtd">

<java-source-program name="casso-test/Set.java">
  <package-decl name="EDU.Washington.grad.gjb.cassowary"/>
  <import module="java.util.*"/>
  <class name="Set">
    <superclass class="Object"/>
    <constructor name="Set" visibility="public" id="ctr-21">
      <formal-arguments/>
        <assignment-expr><lvalue><var-set name="hash"/></lvalue><new><type name="Hashtable"/><arguments/></new>
        </assignment-expr>
    </constructor>
    <constructor name="Set" visibility="public" id="ctr-30">
      <formal-arguments>
        <formal-argument name="i" id="frmarg-26"><type name="int" primitive="true"/></formal-argument>
      </formal-arguments>
        <assignment-expr><lvalue><var-set name="hash"/></lvalue><new><type name="Hashtable"/><arguments><var-ref name="i"/></arguments></new>
        </assignment-expr>
    </constructor>
    <constructor name="Set" visibility="public" id="ctr-43">
      <formal-arguments>
        <formal-argument name="i" id="frmarg-35"><type name="int" primitive="true"/></formal-argument>
        <formal-argument name="f" id="frmarg-39"><type name="float" primitive="true"/></formal-argument>
      </formal-arguments>
        <assignment-expr><lvalue><var-set name="hash"/></lvalue><new><type name="Hashtable"/><arguments><var-ref name="i"/><var-ref name="f"/></arguments></new>
        </assignment-expr>
    </constructor>
    <constructor name="Set" visibility="public" id="ctr-52">
      <formal-arguments>
        <formal-argument name="h" id="frmarg-48"><type name="Hashtable"/></formal-argument>
      </formal-arguments>
        <assignment-expr><lvalue><var-set name="hash"/></lvalue><var-ref name="h"/></assignment-expr>
    </constructor>
    <method name="containsKey" visibility="public" id="meth-60">
      <type name="boolean" primitive="true"/>
      <formal-arguments>
        <formal-argument name="o" id="frmarg-58"><type name="Object"/></formal-argument>
      </formal-arguments>
      <statements>
        <return><send message="containsKey">
            <target><var-ref name="hash"/></target>
            <arguments><var-ref name="o" idref="frmarg-58"/></arguments>
          </send>
        </return>
      </statements>
    </method>
    <method name="insert" visibility="public" id="meth-69">
      <type name="boolean" primitive="true"/>
      <formal-arguments>
        <formal-argument name="o" id="frmarg-67"><type name="Object"/></formal-argument>
      </formal-arguments>
      <statements>
        <return><conditional-expr><binary-expr op="=="><send message="put">
                <target><var-ref name="hash"/></target>
                <arguments><var-ref name="o" idref="frmarg-67"/><var-ref name="o" idref="frmarg-67"/></arguments>
              </send>
              <literal-null/></binary-expr><literal-true/><literal-false/></conditional-expr></return>
      </statements>
    </method>
    <method name="remove" visibility="public" id="meth-78">
      <type name="boolean" primitive="true"/>
      <formal-arguments>
        <formal-argument name="o" id="frmarg-76"><type name="Object"/></formal-argument>
      </formal-arguments>
      <statements>
        <return><conditional-expr><binary-expr op="=="><send message="remove">
                <target><var-ref name="hash"/></target>
                <arguments><var-ref name="o" idref="frmarg-76"/></arguments>
              </send>
              <literal-null/></binary-expr><literal-true/><literal-false/></conditional-expr></return>
      </statements>
    </method>
    <method name="clear" visibility="public" id="meth-82">
      <type name="void" primitive="true"/>
      <formal-arguments/>
      <statements>
        <send message="clear">
          <target><var-ref name="hash"/></target>
          <arguments/>
        </send>
      </statements>
    </method>
    <method name="size" visibility="public" id="meth-88">
      <type name="int" primitive="true"/>
      <formal-arguments/>
      <statements>
        <return><send message="size">
            <target><var-ref name="hash"/></target>
            <arguments/>
          </send>
        </return>
      </statements>
    </method>
    <method name="isEmpty" visibility="public" id="meth-93">
      <type name="boolean" primitive="true"/>
      <formal-arguments/>
      <statements>
        <return><send message="isEmpty">
            <target><var-ref name="hash"/></target>
            <arguments/>
          </send>
        </return>
      </statements>
    </method>
    <method name="clone" visibility="public" id="meth-98">
      <type name="Object"/>
      <formal-arguments/>
      <statements>
        <return><new><type name="Set"/><arguments><cast-expr><type name="Hashtable"/><send message="clone">
                  <target><var-ref name="hash"/></target>
                  <arguments/>
                </send>
              </cast-expr></arguments></new>
        </return>
      </statements>
    </method>
    <method name="elements" visibility="public" id="meth-103">
      <type name="Enumeration"/>
      <formal-arguments/>
      <statements>
        <return><send message="elements">
            <target><var-ref name="hash"/></target>
            <arguments/>
          </send>
        </return>
      </statements>
    </method>
    <method name="toString" visibility="public" id="meth-108">
      <type name="String"/>
      <formal-arguments/>
      <statements>
        <local-variable name="bstr" id="locvar-216"><type name="StringBuffer"/><new><type name="StringBuffer"/><arguments><literal-string length="2">{ </literal-string></arguments></new>
        </local-variable>
        <local-variable name="e" id="locvar-223"><type name="Enumeration"/><send message="keys">
            <target><var-ref name="hash"/></target>
            <arguments/>
          </send>
        </local-variable>
        <if><test><send message="hasMoreElements">
              <target><var-ref name="e" idref="locvar-223"/></target>
              <arguments/>
            </send>
          </test>
          <true-case><statements>
              <send message="append">
                <target><var-ref name="bstr"/></target>
                <arguments><send message="toString">
                    <target><send message="nextElement">
                        <target><var-ref name="e"/></target>
                        <arguments/>
                      </send>
                    </target>
                    <arguments/>
                  </send>
                </arguments>
              </send>
            </statements>
          </true-case>
        </if>
        <statements>
          <loop kind="while"><test><send message="hasMoreElements">
                <target><var-ref name="e"/></target>
                <arguments/>
              </send>
            </test><statements>
              <send message="append">
                <target><var-ref name="bstr"/></target>
                <arguments><binary-expr op="+"><literal-string length="2">, </literal-string><send message="nextElement">
                      <target><var-ref name="e"/></target>
                      <arguments/>
                    </send>
                  </binary-expr></arguments>
              </send>
            </statements>
          </loop>
        </statements>
        <send message="append">
          <target><var-ref name="bstr" idref="locvar-216"/></target>
          <arguments><literal-string length="4"> }\n</literal-string></arguments>
        </send>
        <return><send message="toString">
            <target><var-ref name="bstr" idref="locvar-216"/></target>
            <arguments/>
          </send>
        </return>
      </statements>
    </method>
    <field name="hash" visibility="private"><type name="Hashtable"/></field>
  </class>
</java-source-program>
